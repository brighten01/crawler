{
  "name": "asyn",
  "description": "Asynchronous for normal people",
  "homepage": "https://github.com/limeblack/asyn",
  "keywords": [
    "util",
    "asynchronous",
    "server",
    "client"
  ],
  "contributors": [],
  "dependencies": {},
  "repository": {
    "type": "git",
    "url": "git://github.com/limeblack/asyn.git"
  },
  "main": "asyn.js",
  "version": "0.0.1",
  "readme": "\n\nAsyn makes Asynchronous code simple.\n\n  1. No nested callbacks \n  2. No new introduced APIs, just a simple wrapper for the APIs you know\n  3. Minimial syntax\n\n```js\nasyn\n  (fs.writeFile)('testing','some content',asyn)// func 0\n  (fs.readFile)('server.js',asyn)              // func 1\n  .end(function(asyn){\n    /*\n     * Log the second argument (a buffer) of the 2nd func\n     */\n    console.log(String(asyn[1][1]));\n  })\n\n```\nAn example calling a functions methods and `get`ting a website.\n\n```js\nvar array = [0,1,false,true,'','1'];\nasyn\n  (array,'filter')(Boolean)\n  (http.get)({host:'www.google.com',port:80,path:'/'},asyn)\n  \n  .end(function(asyn){\n    console.log(asyn[0]);\n    asyn[1][0].on('data',function(chunk){\n      console.log('BODY:'+chunk)\n    })\n  })\n\n\n```\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/limeblack/asyn/issues"
  },
  "_id": "asyn@0.0.1",
  "dist": {
    "shasum": "e8c722100205182d75326e97accb2dfb75f87047"
  },
  "_from": "asyn@",
  "_resolved": "https://registry.npmjs.org/asyn/-/asyn-0.0.1.tgz"
}
